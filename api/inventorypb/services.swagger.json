{
  "swagger": "2.0",
  "info": {
    "title": "inventorypb/services.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/inventory/Services/AddExternalService": {
      "post": {
        "summary": "AddExternalService adds External Service.",
        "operationId": "AddExternalService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddExternalServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddExternalServiceRequest"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/v1/inventory/Services/AddMongoDB": {
      "post": {
        "summary": "AddMongoDBService adds MongoDB Service.",
        "operationId": "AddMongoDBService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddMongoDBServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddMongoDBServiceRequest"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/v1/inventory/Services/AddMySQL": {
      "post": {
        "summary": "AddMySQLService adds MySQL Service.",
        "operationId": "AddMySQLService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddMySQLServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddMySQLServiceRequest"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/v1/inventory/Services/AddPostgreSQL": {
      "post": {
        "summary": "AddPostgreSQLService adds PostgreSQL Service.",
        "operationId": "AddPostgreSQLService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddPostgreSQLServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddPostgreSQLServiceRequest"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/v1/inventory/Services/AddProxySQL": {
      "post": {
        "summary": "AddProxySQLService adds ProxySQL Service.",
        "operationId": "AddProxySQLService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddProxySQLServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddProxySQLServiceRequest"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/v1/inventory/Services/Get": {
      "post": {
        "summary": "GetService returns a single Service by ID.",
        "operationId": "GetService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryGetServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGetServiceRequest"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/v1/inventory/Services/List": {
      "post": {
        "summary": "ListServices returns a list of all Services.",
        "operationId": "ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryListServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryListServicesRequest"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/v1/inventory/Services/Remove": {
      "post": {
        "summary": "RemoveService removes Service.",
        "operationId": "RemoveService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryRemoveServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryRemoveServiceRequest"
            }
          }
        ],
        "tags": [
          "Services"
        ]
      }
    }
  },
  "definitions": {
    "inventoryAddExternalServiceRequest": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name. Required."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs. Required."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      }
    },
    "inventoryAddExternalServiceResponse": {
      "type": "object",
      "properties": {
        "external": {
          "$ref": "#/definitions/inventoryExternalService"
        }
      }
    },
    "inventoryAddMongoDBServiceRequest": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name. Required."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs. Required."
        },
        "address": {
          "type": "string",
          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Access port.\nPort is required when the address present."
        },
        "socket": {
          "type": "string",
          "description": "Access unix socket.\nAddress (and port) or socket is required."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      }
    },
    "inventoryAddMongoDBServiceResponse": {
      "type": "object",
      "properties": {
        "mongodb": {
          "$ref": "#/definitions/inventoryMongoDBService"
        }
      }
    },
    "inventoryAddMySQLServiceRequest": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name. Required."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs. Required."
        },
        "address": {
          "type": "string",
          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Access port.\nPort is required when the address present."
        },
        "socket": {
          "type": "string",
          "description": "Access unix socket.\nAddress (and port) or socket is required."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      }
    },
    "inventoryAddMySQLServiceResponse": {
      "type": "object",
      "properties": {
        "mysql": {
          "$ref": "#/definitions/inventoryMySQLService"
        }
      }
    },
    "inventoryAddPostgreSQLServiceRequest": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name. Required."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs. Required."
        },
        "address": {
          "type": "string",
          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Access port.\nPort is required when the address present."
        },
        "socket": {
          "type": "string",
          "description": "Access unix socket.\nAddress (and port) or socket is required."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      }
    },
    "inventoryAddPostgreSQLServiceResponse": {
      "type": "object",
      "properties": {
        "postgresql": {
          "$ref": "#/definitions/inventoryPostgreSQLService"
        }
      }
    },
    "inventoryAddProxySQLServiceRequest": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name. Required."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs. Required."
        },
        "address": {
          "type": "string",
          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Access port.\nPort is required when the address present."
        },
        "socket": {
          "type": "string",
          "description": "Access unix socket.\nAddress (and port) or socket is required."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      }
    },
    "inventoryAddProxySQLServiceResponse": {
      "type": "object",
      "properties": {
        "proxysql": {
          "$ref": "#/definitions/inventoryProxySQLService"
        }
      }
    },
    "inventoryExternalService": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this service instance runs."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "ExternalService represents a generic External service instance."
    },
    "inventoryGetServiceRequest": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        }
      }
    },
    "inventoryGetServiceResponse": {
      "type": "object",
      "properties": {
        "mysql": {
          "$ref": "#/definitions/inventoryMySQLService"
        },
        "mongodb": {
          "$ref": "#/definitions/inventoryMongoDBService"
        },
        "postgresql": {
          "$ref": "#/definitions/inventoryPostgreSQLService"
        },
        "proxysql": {
          "$ref": "#/definitions/inventoryProxySQLService"
        },
        "external": {
          "$ref": "#/definitions/inventoryExternalService"
        }
      }
    },
    "inventoryListServicesRequest": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Return only Services running on that Node."
        },
        "service_type": {
          "$ref": "#/definitions/inventoryServiceType",
          "title": "Do not use yet.\nTODO https://jira.percona.com/browse/PMM-5112"
        }
      }
    },
    "inventoryListServicesResponse": {
      "type": "object",
      "properties": {
        "mysql": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryMySQLService"
          }
        },
        "mongodb": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryMongoDBService"
          }
        },
        "postgresql": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryPostgreSQLService"
          }
        },
        "proxysql": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryProxySQLService"
          }
        },
        "external": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryExternalService"
          }
        }
      }
    },
    "inventoryMongoDBService": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs."
        },
        "address": {
          "type": "string",
          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Access port.\nPort is required when the address present."
        },
        "socket": {
          "type": "string",
          "description": "Access unix socket.\nAddress (and port) or socket is required."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "MongoDBService represents a generic MongoDB instance."
    },
    "inventoryMySQLService": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs."
        },
        "address": {
          "type": "string",
          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Access port.\nPort is required when the address present."
        },
        "socket": {
          "type": "string",
          "description": "Access unix socket.\nAddress (and port) or socket is required."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "MySQLService represents a generic MySQL instance."
    },
    "inventoryPostgreSQLService": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs."
        },
        "address": {
          "type": "string",
          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Access port.\nPort is required when the address present."
        },
        "socket": {
          "type": "string",
          "description": "Access unix socket.\nAddress (and port) or socket is required."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "PostgreSQLService represents a generic PostgreSQL instance."
    },
    "inventoryProxySQLService": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs."
        },
        "address": {
          "type": "string",
          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Access port.\nPort is required when the address present."
        },
        "socket": {
          "type": "string",
          "description": "Access unix socket.\nAddress (and port) or socket is required."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "ProxySQLService represents a generic ProxySQL instance."
    },
    "inventoryRemoveServiceRequest": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier. Required."
        },
        "force": {
          "type": "boolean",
          "format": "boolean",
          "description": "Remove service with all dependencies."
        }
      }
    },
    "inventoryRemoveServiceResponse": {
      "type": "object"
    },
    "inventoryServiceType": {
      "type": "string",
      "enum": [
        "SERVICE_TYPE_INVALID",
        "MYSQL_SERVICE",
        "MONGODB_SERVICE",
        "POSTGRESQL_SERVICE",
        "PROXYSQL_SERVICE",
        "EXTERNAL_SERVICE"
      ],
      "default": "SERVICE_TYPE_INVALID",
      "description": "ServiceType describes supported Service types."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
