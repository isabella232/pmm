{
  "swagger": "2.0",
  "info": {
    "title": "agentpb/agent.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "CheckConnectionResponseStats": {
      "type": "object",
      "properties": {
        "table_count": {
          "type": "integer",
          "format": "int32",
          "description": "A number of tables, 0 if unknown."
        }
      },
      "description": "Stats contains various Service statistics."
    },
    "MetricsBucketCommon": {
      "type": "object",
      "properties": {
        "queryid": {
          "type": "string",
          "description": "md5 of digest_text/fingerprint."
        },
        "fingerprint": {
          "type": "string",
          "description": "digest_text - query signature. Query without values."
        },
        "database": {
          "type": "string",
          "description": "Dimension Group.\n\nMongoDB or PostgreSQL database.\nSeveral databases can't be combined in a single declarative query."
        },
        "schema": {
          "type": "string",
          "description": "MySQL database or PostgreSQL schema.\nSeveral schemas can be combined in a single declarative query."
        },
        "tables": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tables or Collections list."
        },
        "username": {
          "type": "string",
          "description": "client user name."
        },
        "client_host": {
          "type": "string",
          "description": "client IP or hostname."
        },
        "agent_id": {
          "type": "string",
          "description": "Identifier of agent that collect and send metrics."
        },
        "agent_type": {
          "$ref": "#/definitions/inventoryAgentType",
          "description": "Metrics source."
        },
        "period_start_unix_secs": {
          "type": "integer",
          "format": "int64",
          "description": "Time when collection of bucket started."
        },
        "period_length_secs": {
          "type": "integer",
          "format": "int64",
          "description": "Duration of bucket."
        },
        "example": {
          "type": "string",
          "description": "One of query example from set found in bucket."
        },
        "example_format": {
          "$ref": "#/definitions/agentExampleFormat",
          "description": "Deprecated: should not be used, should be removed."
        },
        "example_type": {
          "$ref": "#/definitions/agentExampleType"
        },
        "is_truncated": {
          "type": "boolean",
          "format": "boolean",
          "description": "Indicates if the query example is truncated."
        },
        "num_queries_with_warnings": {
          "type": "number",
          "format": "float",
          "description": "How many queries was with warnings in bucket."
        },
        "num_queries_with_errors": {
          "type": "number",
          "format": "float",
          "description": "How many queries was with error in bucket."
        },
        "errors": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "uint64"
          },
          "description": "List of errors: {code: count}."
        },
        "num_queries": {
          "type": "number",
          "format": "float",
          "description": "Amount queries in this bucket."
        },
        "m_query_time_cnt": {
          "type": "number",
          "format": "float",
          "description": "How many times query_time was found."
        },
        "m_query_time_sum": {
          "type": "number",
          "format": "float",
          "description": "The statement execution time in seconds."
        },
        "m_query_time_min": {
          "type": "number",
          "format": "float",
          "description": "Smallest value of query_time in bucket."
        },
        "m_query_time_max": {
          "type": "number",
          "format": "float",
          "description": "Biggest value of query_time in bucket."
        },
        "m_query_time_p99": {
          "type": "number",
          "format": "float",
          "description": "99 percentile of value of query_time in bucket."
        }
      },
      "description": "Common contains common fields for all DBs."
    },
    "MetricsBucketMongoDB": {
      "type": "object",
      "properties": {
        "m_docs_returned_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_docs_returned_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of returned documents."
        },
        "m_docs_returned_min": {
          "type": "number",
          "format": "float"
        },
        "m_docs_returned_max": {
          "type": "number",
          "format": "float"
        },
        "m_docs_returned_p99": {
          "type": "number",
          "format": "float"
        },
        "m_response_length_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_response_length_sum": {
          "type": "number",
          "format": "float",
          "description": "The response length of the query result in bytes."
        },
        "m_response_length_min": {
          "type": "number",
          "format": "float"
        },
        "m_response_length_max": {
          "type": "number",
          "format": "float"
        },
        "m_response_length_p99": {
          "type": "number",
          "format": "float"
        },
        "m_docs_scanned_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_docs_scanned_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of scanned documents."
        },
        "m_docs_scanned_min": {
          "type": "number",
          "format": "float"
        },
        "m_docs_scanned_max": {
          "type": "number",
          "format": "float"
        },
        "m_docs_scanned_p99": {
          "type": "number",
          "format": "float"
        }
      },
      "description": "MongoDB contains metrics for Mongo DB."
    },
    "MetricsBucketMySQL": {
      "type": "object",
      "properties": {
        "m_lock_time_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_lock_time_sum": {
          "type": "number",
          "format": "float",
          "description": "The time to acquire locks in seconds."
        },
        "m_lock_time_min": {
          "type": "number",
          "format": "float"
        },
        "m_lock_time_max": {
          "type": "number",
          "format": "float"
        },
        "m_lock_time_p99": {
          "type": "number",
          "format": "float"
        },
        "m_rows_sent_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_rows_sent_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of rows sent to the client."
        },
        "m_rows_sent_min": {
          "type": "number",
          "format": "float"
        },
        "m_rows_sent_max": {
          "type": "number",
          "format": "float"
        },
        "m_rows_sent_p99": {
          "type": "number",
          "format": "float"
        },
        "m_rows_examined_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_rows_examined_sum": {
          "type": "number",
          "format": "float",
          "description": "Number of rows scanned - SELECT."
        },
        "m_rows_examined_min": {
          "type": "number",
          "format": "float"
        },
        "m_rows_examined_max": {
          "type": "number",
          "format": "float"
        },
        "m_rows_examined_p99": {
          "type": "number",
          "format": "float"
        },
        "m_rows_affected_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_rows_affected_sum": {
          "type": "number",
          "format": "float",
          "description": "Number of rows changed - UPDATE, DELETE, INSERT."
        },
        "m_rows_affected_min": {
          "type": "number",
          "format": "float"
        },
        "m_rows_affected_max": {
          "type": "number",
          "format": "float"
        },
        "m_rows_affected_p99": {
          "type": "number",
          "format": "float"
        },
        "m_rows_read_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_rows_read_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of rows read from tables."
        },
        "m_rows_read_min": {
          "type": "number",
          "format": "float"
        },
        "m_rows_read_max": {
          "type": "number",
          "format": "float"
        },
        "m_rows_read_p99": {
          "type": "number",
          "format": "float"
        },
        "m_merge_passes_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_merge_passes_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of merge passes that the sort algorithm has had to do."
        },
        "m_merge_passes_min": {
          "type": "number",
          "format": "float"
        },
        "m_merge_passes_max": {
          "type": "number",
          "format": "float"
        },
        "m_merge_passes_p99": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_ops_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_ops_sum": {
          "type": "number",
          "format": "float",
          "description": "Counts the number of page read operations scheduled."
        },
        "m_innodb_io_r_ops_min": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_ops_max": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_ops_p99": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_bytes_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_bytes_sum": {
          "type": "number",
          "format": "float",
          "description": "Similar to innodb_IO_r_ops, but the unit is bytes."
        },
        "m_innodb_io_r_bytes_min": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_bytes_max": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_bytes_p99": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_wait_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_wait_sum": {
          "type": "number",
          "format": "float",
          "description": "Shows how long (in seconds) it took InnoDB to actually read the data from storage."
        },
        "m_innodb_io_r_wait_min": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_wait_max": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_io_r_wait_p99": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_rec_lock_wait_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_rec_lock_wait_sum": {
          "type": "number",
          "format": "float",
          "description": "Shows how long (in seconds) the query waited for row locks."
        },
        "m_innodb_rec_lock_wait_min": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_rec_lock_wait_max": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_rec_lock_wait_p99": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_queue_wait_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_queue_wait_sum": {
          "type": "number",
          "format": "float",
          "description": "Shows how long (in seconds) the query spent either waiting to enter the InnoDB queue or inside that queue waiting for execution."
        },
        "m_innodb_queue_wait_min": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_queue_wait_max": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_queue_wait_p99": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_pages_distinct_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_pages_distinct_sum": {
          "type": "number",
          "format": "float",
          "description": "Counts approximately the number of unique pages the query accessed."
        },
        "m_innodb_pages_distinct_min": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_pages_distinct_max": {
          "type": "number",
          "format": "float"
        },
        "m_innodb_pages_distinct_p99": {
          "type": "number",
          "format": "float"
        },
        "m_query_length_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_query_length_sum": {
          "type": "number",
          "format": "float",
          "description": "Shows how long the query is."
        },
        "m_query_length_min": {
          "type": "number",
          "format": "float"
        },
        "m_query_length_max": {
          "type": "number",
          "format": "float"
        },
        "m_query_length_p99": {
          "type": "number",
          "format": "float"
        },
        "m_bytes_sent_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_bytes_sent_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of bytes sent to all clients."
        },
        "m_bytes_sent_min": {
          "type": "number",
          "format": "float"
        },
        "m_bytes_sent_max": {
          "type": "number",
          "format": "float"
        },
        "m_bytes_sent_p99": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_tables_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_tables_sum": {
          "type": "number",
          "format": "float",
          "description": "Number of temporary tables created on memory for the query."
        },
        "m_tmp_tables_min": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_tables_max": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_tables_p99": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_disk_tables_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_disk_tables_sum": {
          "type": "number",
          "format": "float",
          "description": "Number of temporary tables created on disk for the query."
        },
        "m_tmp_disk_tables_min": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_disk_tables_max": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_disk_tables_p99": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_table_sizes_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_table_sizes_sum": {
          "type": "number",
          "format": "float",
          "description": "Total Size in bytes for all temporary tables used in the query."
        },
        "m_tmp_table_sizes_min": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_table_sizes_max": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_table_sizes_p99": {
          "type": "number",
          "format": "float"
        },
        "m_qc_hit_cnt": {
          "type": "number",
          "format": "float",
          "description": "Boolean metrics:\n- *_cnt - how many times this metric was met.\n- *_sum - how many times this metric was true."
        },
        "m_qc_hit_sum": {
          "type": "number",
          "format": "float",
          "description": "Query Cache hits."
        },
        "m_full_scan_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_full_scan_sum": {
          "type": "number",
          "format": "float",
          "description": "The query performed a full table scan."
        },
        "m_full_join_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_full_join_sum": {
          "type": "number",
          "format": "float",
          "description": "The query performed a full join (a join without indexes)."
        },
        "m_tmp_table_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_table_sum": {
          "type": "number",
          "format": "float",
          "description": "The query created an implicit internal temporary table."
        },
        "m_tmp_table_on_disk_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_tmp_table_on_disk_sum": {
          "type": "number",
          "format": "float",
          "description": "The querys temporary table was stored on disk."
        },
        "m_filesort_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_filesort_sum": {
          "type": "number",
          "format": "float",
          "description": "The query used a filesort."
        },
        "m_filesort_on_disk_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_filesort_on_disk_sum": {
          "type": "number",
          "format": "float",
          "description": "The filesort was performed on disk."
        },
        "m_select_full_range_join_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_select_full_range_join_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of joins that used a range search on a reference table."
        },
        "m_select_range_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_select_range_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of joins that used ranges on the first table."
        },
        "m_select_range_check_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_select_range_check_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of joins without keys that check for key usage after each row."
        },
        "m_sort_range_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_sort_range_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of sorts that were done using ranges."
        },
        "m_sort_rows_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_sort_rows_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of sorted rows."
        },
        "m_sort_scan_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_sort_scan_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of sorts that were done by scanning the table."
        },
        "m_no_index_used_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_no_index_used_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of queries without index."
        },
        "m_no_good_index_used_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_no_good_index_used_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of queries without good index."
        }
      },
      "description": "MySQL contains metrics for MySQL."
    },
    "MetricsBucketPostgreSQL": {
      "type": "object",
      "properties": {
        "m_rows_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_rows_sum": {
          "type": "number",
          "format": "float",
          "description": "The number of rows sent to the client."
        },
        "m_shared_blks_hit_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_shared_blks_hit_sum": {
          "type": "number",
          "format": "float",
          "description": "Total number of shared block cache hits by the statement."
        },
        "m_shared_blks_read_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_shared_blks_read_sum": {
          "type": "number",
          "format": "float",
          "description": "Total number of shared blocks read by the statement."
        },
        "m_shared_blks_dirtied_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_shared_blks_dirtied_sum": {
          "type": "number",
          "format": "float",
          "description": "Total number of shared blocks dirtied by the statement."
        },
        "m_shared_blks_written_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_shared_blks_written_sum": {
          "type": "number",
          "format": "float",
          "description": "Total number of shared blocks written by the statement."
        },
        "m_local_blks_hit_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_local_blks_hit_sum": {
          "type": "number",
          "format": "float",
          "description": "Total number of local block cache hits by the statement."
        },
        "m_local_blks_read_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_local_blks_read_sum": {
          "type": "number",
          "format": "float",
          "description": "Total number of local blocks read by the statement."
        },
        "m_local_blks_dirtied_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_local_blks_dirtied_sum": {
          "type": "number",
          "format": "float",
          "description": "Total number of local blocks dirtied by the statement."
        },
        "m_local_blks_written_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_local_blks_written_sum": {
          "type": "number",
          "format": "float",
          "description": "Total number of local blocks written by the statement."
        },
        "m_temp_blks_read_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_temp_blks_read_sum": {
          "type": "number",
          "format": "float",
          "description": "Total number of temp blocks read by the statement."
        },
        "m_temp_blks_written_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_temp_blks_written_sum": {
          "type": "number",
          "format": "float",
          "description": "Total number of temp blocks written by the statement."
        },
        "m_blk_read_time_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_blk_read_time_sum": {
          "type": "number",
          "format": "float",
          "description": "Total time the statement spent reading blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)."
        },
        "m_blk_write_time_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_blk_write_time_sum": {
          "type": "number",
          "format": "float",
          "description": "Total time the statement spent writing blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)."
        },
        "m_cpu_user_time_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_cpu_user_time_sum": {
          "type": "number",
          "format": "float",
          "description": "Total time user spent in query."
        },
        "m_cpu_sys_time_cnt": {
          "type": "number",
          "format": "float"
        },
        "m_cpu_sys_time_sum": {
          "type": "number",
          "format": "float",
          "description": "Total time system spent in query."
        }
      },
      "description": "PostgreSQL contains metrics for PostgreSQL."
    },
    "SetStateRequestAgentProcess": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/inventoryAgentType"
        },
        "template_left_delim": {
          "type": "string"
        },
        "template_right_delim": {
          "type": "string"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "text_files": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "redact_words": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "AgentProcess describes desired configuration of a single agent process started by pmm-agent."
    },
    "SetStateRequestBuiltinAgent": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/inventoryAgentType"
        },
        "dsn": {
          "type": "string"
        },
        "disable_query_examples": {
          "type": "boolean",
          "format": "boolean",
          "description": "Disables query examples for QAN Agents if true."
        },
        "max_query_log_size": {
          "type": "string",
          "format": "int64",
          "description": "Instructs QAN Agents to rotate query log file or table at this size if \u003e 0."
        }
      },
      "description": "BuiltinAgent describes desired configuration of a single built-in agent for pmm-agent."
    },
    "StartActionRequestMongoDBExplainParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        },
        "query": {
          "type": "string"
        }
      },
      "description": "MongoDBExplainParams describes MongoDB EXPLAIN action parameters."
    },
    "StartActionRequestMongoDBQueryBuildInfoParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        }
      },
      "description": "MongoDBQueryBuildInfoParams describes MongoDB buildInfo query action parameters."
    },
    "StartActionRequestMongoDBQueryGetCmdLineOptsParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        }
      },
      "description": "MongoDBQueryGetCmdLineOptsParams describes MongoDB getCmdLineOpts query action parameters."
    },
    "StartActionRequestMongoDBQueryGetParameterParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        }
      },
      "description": "MongoDBQueryGetParameterParams describes MongoDB getParameter query action parameters."
    },
    "StartActionRequestMySQLExplainParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        },
        "query": {
          "type": "string"
        },
        "output_format": {
          "$ref": "#/definitions/agentMysqlExplainOutputFormat"
        }
      },
      "description": "MySQLExplainParams describes MySQL EXPLAIN action parameters."
    },
    "StartActionRequestMySQLQuerySelectParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        },
        "query": {
          "type": "string",
          "description": "Query suffix (without leading SELECT)."
        }
      },
      "description": "MySQLQuerySelectParams describes MySQL SELECT query action parameters."
    },
    "StartActionRequestMySQLQueryShowParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        },
        "query": {
          "type": "string",
          "description": "Query suffix (without leading SHOW)."
        }
      },
      "description": "MySQLQueryShowParams describes MySQL SHOW query action parameters."
    },
    "StartActionRequestMySQLShowCreateTableParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        },
        "table": {
          "type": "string"
        }
      },
      "description": "MySQLShowCreateTableParams describes MySQL SHOW CREATE TABLE action parameters."
    },
    "StartActionRequestMySQLShowIndexParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        },
        "table": {
          "type": "string"
        }
      },
      "description": "MySQLShowIndexParams describes MySQL SHOW INDEX action parameters."
    },
    "StartActionRequestMySQLShowTableStatusParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        },
        "table": {
          "type": "string"
        }
      },
      "description": "MySQLShowTableStatusParams describes MySQL SHOW TABLE STATUS action parameters."
    },
    "StartActionRequestPTSummaryParams": {
      "type": "object",
      "description": "PTSummaryParams describes parameters for PT summary."
    },
    "StartActionRequestPostgreSQLQuerySelectParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        },
        "query": {
          "type": "string",
          "description": "Query suffix (without leading SELECT)."
        }
      },
      "description": "PostgreSQLQuerySelectParams describes PostgreSQL SELECT query action parameters."
    },
    "StartActionRequestPostgreSQLQueryShowParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        }
      },
      "description": "PostgreSQLQueryShowParams describes PostgreSQL SHOW query action parameters."
    },
    "StartActionRequestPostgreSQLShowCreateTableParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        },
        "table": {
          "type": "string"
        }
      },
      "description": "PostgreSQLShowCreateTableParams describes PostgreSQL SHOW CREATE TABLE action parameters."
    },
    "StartActionRequestPostgreSQLShowIndexParams": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        },
        "table": {
          "type": "string"
        }
      },
      "description": "PostgreSQLShowIndexParams describes PostgreSQL SHOW INDEX action parameters."
    },
    "agentActionResultRequest": {
      "type": "object",
      "properties": {
        "action_id": {
          "type": "string",
          "description": "Unique action ID."
        },
        "output": {
          "type": "string",
          "format": "byte",
          "description": "New chunk of action output."
        },
        "done": {
          "type": "boolean",
          "format": "boolean",
          "description": "True if action is finished."
        },
        "error": {
          "type": "string",
          "description": "Error message if action failed."
        }
      },
      "description": "ActionResultRequest is an AgentMessage containing action run status and new chunk of output."
    },
    "agentActionResultResponse": {
      "type": "object",
      "description": "ActionResultResponse is an ServerMessage for ActionResultRequest acceptance."
    },
    "agentCheckConnectionRequest": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/inventoryServiceType",
          "description": "Service type."
        },
        "dsn": {
          "type": "string",
          "description": "DSN for the service. May contain connection (dial) timeout."
        },
        "timeout": {
          "type": "string",
          "description": "Timeout for the whole request."
        }
      },
      "description": "CheckConnectionRequest is a ServerMessage asking pmm-agent to check connection with Service."
    },
    "agentCheckConnectionResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error message if connection check failed."
        },
        "stats": {
          "$ref": "#/definitions/CheckConnectionResponseStats"
        }
      },
      "description": "CheckConnectionResponse is an AgentMessage containing a result of connection check."
    },
    "agentExampleFormat": {
      "type": "string",
      "enum": [
        "EXAMPLE_FORMAT_INVALID",
        "EXAMPLE",
        "FINGERPRINT"
      ],
      "default": "EXAMPLE_FORMAT_INVALID",
      "description": "ExampleFormat is format of query example: real or query without values.\n\nDeprecated: is not used, should not be used, should be removed."
    },
    "agentExampleType": {
      "type": "string",
      "enum": [
        "EXAMPLE_TYPE_INVALID",
        "RANDOM",
        "SLOWEST",
        "FASTEST",
        "WITH_ERROR"
      ],
      "default": "EXAMPLE_TYPE_INVALID",
      "description": "ExampleType is a type of query example selected for this query class in given period of time."
    },
    "agentMetricsBucket": {
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/MetricsBucketCommon"
        },
        "mysql": {
          "$ref": "#/definitions/MetricsBucketMySQL"
        },
        "mongodb": {
          "$ref": "#/definitions/MetricsBucketMongoDB"
        },
        "postgresql": {
          "$ref": "#/definitions/MetricsBucketPostgreSQL"
        }
      },
      "description": "MetricsBucket is aggregated message created by pmm-agent.\nContains information about one query selected in defined way from query class in specific period of time."
    },
    "agentMysqlExplainOutputFormat": {
      "type": "string",
      "enum": [
        "MYSQL_EXPLAIN_OUTPUT_FORMAT_INVALID",
        "MYSQL_EXPLAIN_OUTPUT_FORMAT_DEFAULT",
        "MYSQL_EXPLAIN_OUTPUT_FORMAT_JSON",
        "MYSQL_EXPLAIN_OUTPUT_FORMAT_TRADITIONAL_JSON"
      ],
      "default": "MYSQL_EXPLAIN_OUTPUT_FORMAT_INVALID",
      "description": "MysqlExplainOutputFormat output formats supported by MySQL Explain action.\n\n - MYSQL_EXPLAIN_OUTPUT_FORMAT_DEFAULT: EXPLAIN FORMAT=TRADITIONAL, returns result as text\n - MYSQL_EXPLAIN_OUTPUT_FORMAT_JSON: EXPLAIN FORMAT=JSON\n - MYSQL_EXPLAIN_OUTPUT_FORMAT_TRADITIONAL_JSON: EXPLAIN FORMAT=TRADITIONAL, returns result as JSON"
    },
    "agentPing": {
      "type": "object",
      "description": "Ping is a AgentMessage/ServerMessage for checking connectivity, latency and clock drift."
    },
    "agentPong": {
      "type": "object",
      "properties": {
        "current_time": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "Pong is an AgentMessage/ServerMessage with current time for measuring clock drift."
    },
    "agentQANCollectRequest": {
      "type": "object",
      "properties": {
        "metrics_bucket": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/agentMetricsBucket"
          }
        }
      },
      "description": "QANCollectRequest is an AgentMessage for sending QAN data for qan-api."
    },
    "agentQANCollectResponse": {
      "type": "object",
      "description": "QANCollectResponse is a ServerMessage for QAN data acceptance."
    },
    "agentServerMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "pong": {
          "$ref": "#/definitions/agentPong",
          "title": "responses from server"
        },
        "state_changed": {
          "$ref": "#/definitions/agentStateChangedResponse"
        },
        "qan_collect": {
          "$ref": "#/definitions/agentQANCollectResponse"
        },
        "action_result": {
          "$ref": "#/definitions/agentActionResultResponse"
        },
        "ping": {
          "$ref": "#/definitions/agentPing",
          "title": "requests from server"
        },
        "set_state": {
          "$ref": "#/definitions/agentSetStateRequest"
        },
        "start_action": {
          "$ref": "#/definitions/agentStartActionRequest"
        },
        "stop_action": {
          "$ref": "#/definitions/agentStopActionRequest"
        },
        "check_connection": {
          "$ref": "#/definitions/agentCheckConnectionRequest"
        }
      }
    },
    "agentSetStateRequest": {
      "type": "object",
      "properties": {
        "agent_processes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SetStateRequestAgentProcess"
          }
        },
        "builtin_agents": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SetStateRequestBuiltinAgent"
          }
        }
      },
      "description": "SetStateRequest is a ServerMessage asking pmm-agent to run agents according to desired state."
    },
    "agentSetStateResponse": {
      "type": "object",
      "description": "SetStateResponse is an AgentMessage for SetStateRequest acceptance."
    },
    "agentStartActionRequest": {
      "type": "object",
      "properties": {
        "action_id": {
          "type": "string"
        },
        "mysql_explain_params": {
          "$ref": "#/definitions/StartActionRequestMySQLExplainParams"
        },
        "mysql_show_create_table_params": {
          "$ref": "#/definitions/StartActionRequestMySQLShowCreateTableParams"
        },
        "mysql_show_table_status_params": {
          "$ref": "#/definitions/StartActionRequestMySQLShowTableStatusParams"
        },
        "mysql_show_index_params": {
          "$ref": "#/definitions/StartActionRequestMySQLShowIndexParams"
        },
        "postgresql_show_create_table_params": {
          "$ref": "#/definitions/StartActionRequestPostgreSQLShowCreateTableParams"
        },
        "postgresql_show_index_params": {
          "$ref": "#/definitions/StartActionRequestPostgreSQLShowIndexParams"
        },
        "mongodb_explain_params": {
          "$ref": "#/definitions/StartActionRequestMongoDBExplainParams"
        },
        "pt_summary_params": {
          "$ref": "#/definitions/StartActionRequestPTSummaryParams"
        },
        "mysql_query_show_params": {
          "$ref": "#/definitions/StartActionRequestMySQLQueryShowParams"
        },
        "mysql_query_select_params": {
          "$ref": "#/definitions/StartActionRequestMySQLQuerySelectParams"
        },
        "postgresql_query_show_params": {
          "$ref": "#/definitions/StartActionRequestPostgreSQLQueryShowParams"
        },
        "postgresql_query_select_params": {
          "$ref": "#/definitions/StartActionRequestPostgreSQLQuerySelectParams"
        },
        "mongodb_query_getparameter_params": {
          "$ref": "#/definitions/StartActionRequestMongoDBQueryGetParameterParams"
        },
        "mongodb_query_buildinfo_params": {
          "$ref": "#/definitions/StartActionRequestMongoDBQueryBuildInfoParams"
        },
        "mongodb_query_getcmdlineopts_params": {
          "$ref": "#/definitions/StartActionRequestMongoDBQueryGetCmdLineOptsParams"
        },
        "timeout": {
          "type": "string"
        }
      },
      "description": "StartActionRequest is a ServerMessage asking pmm-agent to start action."
    },
    "agentStartActionResponse": {
      "type": "object",
      "description": "StartActionResponse is an AgentMessage for StartActionRequest acceptance."
    },
    "agentStateChangedRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus"
        },
        "listen_port": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "StateChangedRequest is an AgentMessage describing actual agent status."
    },
    "agentStateChangedResponse": {
      "type": "object",
      "description": "StateChangedResponse is a ServerMessage for StateChangedRequest acceptance."
    },
    "agentStopActionRequest": {
      "type": "object",
      "properties": {
        "action_id": {
          "type": "string"
        }
      },
      "description": "StopActionRequest is a ServerMessage asking pmm-agent to stop action."
    },
    "agentStopActionResponse": {
      "type": "object",
      "description": "StopActionResponse is an AgentMessage for StopActionRequest acceptance."
    },
    "inventoryAgentStatus": {
      "type": "string",
      "enum": [
        "AGENT_STATUS_INVALID",
        "STARTING",
        "RUNNING",
        "WAITING",
        "STOPPING",
        "DONE"
      ],
      "default": "AGENT_STATUS_INVALID",
      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished."
    },
    "inventoryAgentType": {
      "type": "string",
      "enum": [
        "AGENT_TYPE_INVALID",
        "PMM_AGENT",
        "NODE_EXPORTER",
        "MYSQLD_EXPORTER",
        "MONGODB_EXPORTER",
        "POSTGRES_EXPORTER",
        "PROXYSQL_EXPORTER",
        "QAN_MYSQL_PERFSCHEMA_AGENT",
        "QAN_MYSQL_SLOWLOG_AGENT",
        "QAN_MONGODB_PROFILER_AGENT",
        "QAN_POSTGRESQL_PGSTATEMENTS_AGENT",
        "QAN_POSTGRESQL_PGSTATMONITOR_AGENT",
        "RDS_EXPORTER",
        "EXTERNAL_EXPORTER"
      ],
      "default": "AGENT_TYPE_INVALID",
      "description": "AgentType describes supported Agent types."
    },
    "inventoryServiceType": {
      "type": "string",
      "enum": [
        "SERVICE_TYPE_INVALID",
        "MYSQL_SERVICE",
        "MONGODB_SERVICE",
        "POSTGRESQL_SERVICE",
        "PROXYSQL_SERVICE",
        "EXTERNAL_SERVICE"
      ],
      "default": "SERVICE_TYPE_INVALID",
      "description": "ServiceType describes supported Service types."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
